#!/bin/bash

# Script de d√©ploiement Git pour Garage Management System
# Ce script configure Git et pousse le code vers GitHub

echo "üöÄ Garage Management System - Configuration Git & GitHub"
echo "========================================================"

# V√©rifier si Git est install√©
if ! command -v git &> /dev/null; then
    echo "‚ùå Git n'est pas install√©. Veuillez l'installer d'abord."
    exit 1
fi

echo
echo "üìã √âtapes √† suivre:"
echo "1. Configurez Git avec vos informations"
echo "2. Cr√©ez un repository sur GitHub"
echo "3. Ex√©cutez les commandes de push"
echo

# Configuration Git
echo "üîß Configuration Git"
echo "--------------------"
echo "Ex√©cutez ces commandes avec vos informations:"
echo
echo "git config --global user.name \"Votre Nom\""
echo "git config --global user.email \"votre.email@example.com\""
echo

# Initialisation du repository
echo "üìÅ Initialisation du repository local"
echo "--------------------------------------"
echo "git init"
echo "git add ."
echo "git commit -m \"Initial commit: Garage Management System\""
echo

# Repository GitHub
echo "üåê Cr√©ation du repository GitHub"
echo "--------------------------------"
echo "1. Allez sur https://github.com"
echo "2. Cliquez sur 'New repository'"
echo "3. Nom: garage-management-system"
echo "4. Description: Syst√®me de gestion de garage avec React et TypeScript"
echo "5. Public ou Private selon vos besoins"
echo "6. NE PAS initialiser avec README (vous avez d√©j√† du code)"
echo "7. Cliquez 'Create repository'"
echo

# Commandes de push
echo "üì§ Push vers GitHub"
echo "-------------------"
echo "Remplacez VOTRE-USERNAME par votre nom d'utilisateur GitHub:"
echo
echo "git remote add origin https://github.com/VOTRE-USERNAME/garage-management-system.git"
echo "git branch -M main"
echo "git push -u origin main"
echo

# V√©rification
echo "‚úÖ V√©rification"
echo "---------------"
echo "Apr√®s le push, v√©rifiez:"
echo "- Votre code est visible sur GitHub"
echo "- Tous les fichiers sont pr√©sents"
echo "- Le README.md s'affiche correctement"
echo

# Prochaines √©tapes
echo "üéØ Prochaines √©tapes"
echo "--------------------"
echo "1. Consultez DEPLOYMENT.md pour le d√©ploiement"
echo "2. Configurez les GitHub Actions (optionnel)"
echo "3. Invitez des collaborateurs si n√©cessaire"
echo

# Commandes utiles
echo "üõ†Ô∏è Commandes Git utiles"
echo "-----------------------"
echo "git status                    # Voir l'√©tat des fichiers"
echo "git add .                     # Ajouter tous les fichiers"
echo "git commit -m \"message\"       # Faire un commit"
echo "git push origin main          # Pousser vers GitHub"
echo "git pull origin main          # R√©cup√©rer les modifications"
echo

echo "üìö Pour plus d'informations, consultez GIT_SETUP.md"
echo

# Option pour ex√©cuter automatiquement
read -p "Voulez-vous ex√©cuter automatiquement l'initialisation Git? (y/N): " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo "üîÑ Initialisation Git en cours..."
    
    # Initialiser Git si pas d√©j√† fait
    if [ ! -d ".git" ]; then
        git init
        echo "‚úÖ Repository Git initialis√©"
    fi
    
    # Ajouter tous les fichiers
    git add .
    echo "‚úÖ Fichiers ajout√©s"
    
    # Faire le commit initial
    git commit -m "Initial commit: Garage Management System

    Fonctionnalit√©s impl√©ment√©es:
    - Gestion des clients et v√©hicules
    - Syst√®me de r√©parations
    - Galerie photos
    - Authentification et permissions
    - Facturation et param√®tres
    - Interface moderne avec React + TypeScript"
    
    echo "‚úÖ Commit initial cr√©√©"
    echo
    echo "üåê Maintenant, cr√©ez votre repository sur GitHub et ex√©cutez:"
    echo "git remote add origin https://github.com/VOTRE-USERNAME/garage-management-system.git"
    echo "git push -u origin main"
else
    echo "‚ÑπÔ∏è Ex√©cutez manuellement les commandes Git selon vos besoins."
fi

echo
echo "üéâ Configuration termin√©e ! Bon d√©veloppement !"